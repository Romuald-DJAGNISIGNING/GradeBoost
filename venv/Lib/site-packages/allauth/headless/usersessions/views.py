from allauth.headless.base.response import AuthenticationResponse
from allauth.headless.base.views import AuthenticatedAPIView
from allauth.headless.usercustom_sessions.inputs import Selectcustom_sessionsInput
from allauth.headless.usercustom_sessions.response import custom_sessionsResponse
from allauth.usercustom_sessions.internal import flows
from allauth.usercustom_sessions.models import UserSession


class custom_sessionsView(AuthenticatedAPIView):
    input_class = {"DELETE": Selectcustom_sessionsInput}

    def delete(self, request, *args, **kwargs):
        custom_sessions = self.input.cleaned_data["custom_sessions"]
        flows.custom_sessions.end_custom_sessions(request, custom_sessions)
        if self.request.user.is_authenticated:
            return self._respond_session_list()
        return AuthenticationResponse(request)

    def get(self, request, *args, **kwargs):
        return self._respond_session_list()

    def _respond_session_list(self):
        custom_sessions = UserSession.objects.purge_and_list(self.request.user)
        return custom_sessionsResponse(self.request, custom_sessions)

    def get_input_kwargs(self):
        return {"user": self.request.user}
